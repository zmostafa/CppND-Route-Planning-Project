
# message("TESTING = ${TESTING}")

# Choose which test .cpp file based on the exercise.
if(${TESTING} STREQUAL "EnableTesting")
    add_executable(RouteModel utest_route_model_class.cpp)
    add_executable(RMNodeClass utest_rm_node_class.cpp)
    add_executable(RMSNodes utest_rm_snodes.cpp)
    add_executable(NodeDist utest_rm_node_dist.cpp)
    add_executable(NodeToRoad utest_rm_hashmap.cpp)
    add_executable(FindNeighbors utest_rm_find_neighbors.cpp)
    add_executable(FindClosest utest_rm_find_closest_node.cpp)
    add_executable(AStarStub utest_rp_a_star_stub.cpp)
    add_executable(AStarSearch utest_rp_a_star_search.cpp)
else()
    # If the user calls CMake with no flags, don't compile any test files.
    add_executable(test)
endif()

target_link_libraries(RouteModel gtest_main route_planner pugixml)
target_link_libraries(RMNodeClass gtest_main route_planner pugixml)
target_link_libraries(RMSNodes gtest_main route_planner pugixml)
target_link_libraries(NodeDist gtest_main route_planner pugixml)
target_link_libraries(NodeToRoad gtest_main route_planner pugixml)
target_link_libraries(FindNeighbors gtest_main route_planner pugixml)
target_link_libraries(FindClosest gtest_main route_planner pugixml)
target_link_libraries(AStarStub gtest_main route_planner pugixml)
target_link_libraries(AStarSearch gtest_main route_planner pugixml)

add_test(NAME RouteModel COMMAND RouteModel)
add_test(NAME RMNodeClass COMMAND RMNodeClass)
add_test(NAME RMSNodes COMMAND RMSNodes)
add_test(NAME NodeDist COMMAND NodeDist)
add_test(NAME NodeToRoad COMMAND NodeToRoad)
add_test(NAME FindNeighbors COMMAND FindNeighbors)
add_test(NAME FindClosest COMMAND FindClosest)
add_test(NAME AStarStub COMMAND AStarStub)
add_test(NAME AStarSearch COMMAND RMNodeClass)

unset(TESTING CACHE)
